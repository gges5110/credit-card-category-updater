import { CategoryResult } from '../types';

export function parseQuarterDates(quarter: string): { startDate: string; endDate: string } {
  // Parse quarter string like "July 01, 2025 - September 30, 2025"
  const dateMatch = quarter.match(/(\w+)\s+(\d{1,2}),\s*(\d{4})\s*-\s*(\w+)\s+(\d{1,2}),\s*(\d{4})/);
  
  if (dateMatch) {
    const [, startMonth, startDay, startYear, endMonth, endDay, endYear] = dateMatch;
    
    const startDate = new Date(`${startMonth} ${startDay}, ${startYear}`);
    const endDate = new Date(`${endMonth} ${endDay}, ${endYear}`);
    
    return {
      startDate: formatDateForCalendar(startDate),
      endDate: formatDateForCalendar(endDate)
    };
  }
  
  // Fallback: return current quarter dates
  const now = new Date();
  const currentYear = now.getFullYear();
  const currentMonth = now.getMonth();
  
  let startDate: Date;
  let endDate: Date;
  
  if (currentMonth >= 0 && currentMonth <= 2) { // Q1
    startDate = new Date(currentYear, 0, 1); // Jan 1
    endDate = new Date(currentYear, 2, 31); // Mar 31
  } else if (currentMonth >= 3 && currentMonth <= 5) { // Q2
    startDate = new Date(currentYear, 3, 1); // Apr 1
    endDate = new Date(currentYear, 5, 30); // Jun 30
  } else if (currentMonth >= 6 && currentMonth <= 8) { // Q3
    startDate = new Date(currentYear, 6, 1); // Jul 1
    endDate = new Date(currentYear, 8, 30); // Sep 30
  } else { // Q4
    startDate = new Date(currentYear, 9, 1); // Oct 1
    endDate = new Date(currentYear, 11, 31); // Dec 31
  }
  
  return {
    startDate: formatDateForCalendar(startDate),
    endDate: formatDateForCalendar(endDate)
  };
}

function formatDateForCalendar(date: Date): string {
  return date.toISOString().split('T')[0].replace(/-/g, '');
}

export function generateCalendarUrl(categoryResult: CategoryResult): string {
  const { startDate, endDate } = parseQuarterDates(categoryResult.quarter);
  
  const title = `${categoryResult.source}: ${categoryResult.category}`;
  const dates = `${startDate}/${endDate}`;
  
  const details = [
    `Quarterly Credit Card Categories`,
    ``,
    `Source: ${categoryResult.source}`,
    `Quarter: ${categoryResult.quarter}`,
    `Categories: ${categoryResult.category}`,
    ``,
    `Remember to activate your quarterly categories for maximum cashback!`,
    ``,
    `Generated by Credit Card Category Tracker`
  ].join('\\n');

  const params = new URLSearchParams({
    action: 'TEMPLATE',
    text: title,
    dates: dates,
    details: details,
    ctz: 'America/New_York'
  });

  return `https://calendar.google.com/calendar/render?${params.toString()}`;
}

export function getQuarterDisplayName(quarter: string): string {
  const { startDate, endDate } = parseQuarterDates(quarter);
  
  // Convert YYYYMMDD back to readable format
  const start = new Date(
    parseInt(startDate.substring(0, 4)),
    parseInt(startDate.substring(4, 6)) - 1,
    parseInt(startDate.substring(6, 8))
  );
  
  const end = new Date(
    parseInt(endDate.substring(0, 4)),
    parseInt(endDate.substring(4, 6)) - 1,
    parseInt(endDate.substring(6, 8))
  );
  
  const startFormatted = start.toLocaleDateString('en-US', { 
    month: 'long', 
    day: 'numeric',
    year: 'numeric'
  });
  
  const endFormatted = end.toLocaleDateString('en-US', { 
    month: 'long', 
    day: 'numeric',
    year: 'numeric'
  });
  
  return `${startFormatted} - ${endFormatted}`;
}

export function getNextUpdateDate(): string {
  const now = new Date();
  const nextMonth = new Date(now.getFullYear(), now.getMonth() + 1, 1);
  return nextMonth.toLocaleDateString('en-US', {
    month: 'long',
    day: 'numeric',
    year: 'numeric'
  });
}